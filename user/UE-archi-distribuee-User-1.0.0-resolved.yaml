---
openapi: 3.1.0
info:
  title: User API
  description: This is the API of the User service
  contact:
    email: helene.coullon@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Welcome to the User service!</h1>
  /users:
    get:
      tags:
      - developers
      summary: get the full JSON database
      operationId: get_users
      responses:
        "200":
          description: full JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'

  /users/infomovies/{userid}:
    get:
      summary: Get movies for a user.
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'

  /users/{userid}:
    get:
      tags:
      - developers
      summary: get the user by id
      operationId: get_users_byid
      parameters:
      - id: int
        in: path
        description: integer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter

  /users/bookings/{userid}:
    get:
      summary: Get bookings for a user.
      parameters:
        - name: userid
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'

components:
  schemas:
    AllUsers:
      required:
      - user
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      required:
      - id
      - name
      - last_active
      type: object
      properties:
        id:
          type: string
          example: "garret_heaton"
        name:
          type: string
          example: "Garret Heaton"
        last_active:
          type: int
          example: 1360031425

    Movie:
      type: object
      properties:
        id:
          type: string
          example: "a8034f44-aee4-44cf-b32c-74cf452aaaae"
        title:
          type: string
          example: "The Martian"
        director:
          type: string
          example: "Ridley Scott"
        rate:
          type: int
          example: 8.2

    Booking:
      type: object
      properties:
        userid:
          type: string
        dates:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
              movies:
                type: array
                items:
                  type: string